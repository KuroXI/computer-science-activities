--#SET TERMINATOR @
CREATE PROCEDURE SHOW_SERVICE_YEAR(IN SELECTED_YEAR INT)
	DYNAMIC RESULT SETS 1
	BEGIN
		BEGIN
			DECLARE cursor_service_year CURSOR WITH RETURN FOR
				SELECT e.empNo, e.lastName, e.firstNme, e.workDept, d.deptName, e.hireDate
				FROM emp e
				LEFT JOIN dept d ON e.workDept = d.deptNo
				WHERE YEAR(e.hireDate) = SELECTED_YEAR;
			OPEN cursor_service_year;
		END;
	END @
--#SET TERMINATOR ;

call SHOW_SERVICE_YEAR(2005);

--#SET TERMINATOR @
CREATE FUNCTION RANK_FILE_SALARY_INCREASE(
	IN EMPLOYEE_JOB CHAR(8),
	IN EMPLOYEE_SALARY DECIMAL(10, 2)
) RETURNS DECIMAL(10, 2)
	BEGIN ATOMIC
		DECLARE SALARY_INCREASE DECIMAL(10, 2);
		SET SALARY_INCREASE = 0;
		
		IF (EMPLOYEE_JOB NOT IN('PRES', 'MANAGER')) THEN
			SET SALARY_INCREASE = (EMPLOYEE_SALARY * 0.1) + EMPLOYEE_SALARY;
		ELSE SET SALARY_INCREASE = EMPLOYEE_SALARY;
		END IF;
		
		RETURN SALARY_INCREASE;
	END @
--#SET TERMINATOR ;

SELECT empNo, lastName, firstNme, job, salary, RANK_FILE_SALARY_INCREASE(job, salary) AS new_salary
FROM emp;